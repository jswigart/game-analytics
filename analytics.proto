
package Analytics;

import "google/protobuf/descriptor.proto";

extend google.protobuf.MessageOptions 
{
	optional bool cachelastvalue	= 5000;
	optional string cachekeysuffix	= 5001;
}

enum Compression
{
	Compression_None	= 0;
	Compression_FastLZ	= 1;
}

message TopicSubscribe
{
	required string					topic						= 1;
}

message TopicUnsubscribe
{
	required string					topic						= 1;
}

message SystemNavNotFound
{
	required string					mapName						= 1;
}

message SystemNavAutoDownloaded
{
	required string					mapName						= 1;
}

message SystemAssert
{
	required string					condition					= 1;
	optional string					file						= 2;
	optional int32					line						= 3;
}

message SystemCrash
{
	required string					info						= 1;
}

message SystemModelData
{
	option (cachelastvalue) = true;
	option (cachekeysuffix) = "modelName";

	optional Compression			compressionType				= 1 [default=Compression_None];
	required string					modelName					= 2;
	required bytes					modelBytes					= 3;
}

message GameEntityInfo
{
	required int32					entityId					= 1;
	required int32					groupId						= 2;
	required int32					classId						= 3;
	required float					positionX					= 4;
	required float					positionY					= 5;
	required float					positionZ					= 6;
	required float					heading						= 7;
	required float					pitch						= 8;
	required float					roll						= 9;
	optional uint32					quantity					= 10;
	optional uint32					quantityMax					= 11;	
	optional uint32					health						= 12;
	optional uint32					healthMax					= 13;
	optional uint32					armor						= 14;
	optional uint32					armorMax					= 15;
	optional uint32					ammo1						= 16;
	optional uint32					ammo1Max					= 17;
	optional uint32					ammo2						= 18;
	optional uint32					ammo2Max					= 19;
	optional uint32					ammo3						= 20;
	optional uint32					ammo3Max					= 21;
	optional uint32					ammo4						= 22;
	optional uint32					ammo4Max					= 23;
}

message GameEntityList
{
	option (cachelastvalue) = true;

	repeated GameEntityInfo			entities					= 1;
}

message GameWeaponFired
{
	required int32					weaponId					= 1;
	required float					positionX					= 2;
	required float					positionY					= 3;
	required float					positionZ					= 4;
}

message GameDeath
{
	required int32					killedByClass				= 1; // this class Id maps to an enumeration defined by the client who is communicating this message
	required int32					killedByWeapon				= 2; // this weapon Id maps to an enumeration defined by the client who is communicating this message
	required int32					killedByHealth				= 3; // how much health did they have left when they killed me
}

message GameTookDamage
{
	required int32					weaponId					= 1;
	required float					positionX					= 2;
	required float					positionY					= 3;
	required float					positionZ					= 4;
}

message GameNavigationStuck
{
	required int32					entityId					= 1;
	required float					positionX					= 2;
	required float					positionY					= 3;
	required float					positionZ					= 4;
}

message MessageUnion
{
	required int64					timestamp						= 1;

	oneof msg {
		SystemNavNotFound			systemNavNotFound				= 2;
		SystemNavAutoDownloaded		systemNavDownloaded				= 3;
		SystemAssert				systemAssert					= 4;
		SystemCrash					systemCrash						= 5;
		SystemModelData				systemModelData					= 6;

		GameEntityList				gameEntityList					= 100;
		GameWeaponFired				gameWeaponFired					= 101;
		GameDeath					gameDeath						= 102;
		GameTookDamage				gameTookDamage					= 103;
		GameNavigationStuck			gameNavigationStuck				= 104;

		TopicSubscribe				topicSubscribe					= 1000;
		TopicUnsubscribe			topicUnsubscribe				= 1001;
	}
}
